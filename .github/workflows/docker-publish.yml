name: Docker Publish

on:
  pull_request:
    types: [closed]
    branches: [ "main" ]

env:
  REGISTRY: docker.io
  IMAGE_NAME: emreihtiyar/numbers-fe

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Generate version
        id: version
        run: |
          # Get the latest tag
          latest_tag=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
          
          # Extract major, minor, patch
          IFS='.' read -r major minor patch <<< "${latest_tag#v}"
          
          # Increment patch version
          new_patch=$((patch + 1))
          
          # Create new version
          new_version="v$major.$minor.$new_patch"
          
          # Set output
          echo "new_version=${new_version}" >> $GITHUB_OUTPUT
          echo "version_tag=${new_version#v}" >> $GITHUB_OUTPUT

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.version.outputs.version_tag }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Create Git tag
        run: |
          git tag ${{ steps.version.outputs.new_version }}
          git push origin ${{ steps.version.outputs.new_version }} 